#BlueJ class context
comment0.target=ScrollActor
comment0.text=\n\ An\ actor\ which\ ca\ be\ in\ a\ ScrollWorld.\n\ It\ has\ 3\ types\ of\ locations\:\n\ <Li>\n\ A\ location\ where\ it\ really\ is.\ That\ means,\ the\n\ location\ the\ space\ the\ camera\ is\ moving\ over.\n\ This\ is\ the\ most\ important\ one.\ Access\ it\ by\n\ the\ {@link\ getGlobalX}\ and\ the\ {@link\ getGlobalY}\n\ methods.\n\ </Li><Li>\n\ A\ location\ seen\ from\ the\ camera.\ This\ means\ when\n\ it's\ at\ {@link\ 0,0},\ it\ is\ at\ the\ center\ of\ what\n\ you\ see.\ Access\ it\ by\ the\ {@link\ getXFromCamera}\n\ and\ the\ {@link\ getYFromCamera}\ methods.\n\ </Li><Li>\n\ A\ location\ on\ screen.\ This\ is\ what\ you\ would\ do\ in\n\ your\ usual\ scenarios,\ so\ {@link\ 0,0}\ is\ the\ top\ left\n\ corner.\ With\ this\ library,\ it\ is\ the\ least\ important\n\ one.\ Access\ it\ by\ the\ usual\ {@link\ getX}\ and\ {@link\n\ getY}\ methods.\n\ </Li>\n\ \n\ @author\ Sven\ van\ Nigtevecht\n\ @version\ 2.1.5\n
comment1.params=
comment1.target=ScrollActor()
comment1.text=\n\ Create\ a\ new\ ScrollActor.\n
comment10.params=distance
comment10.target=void\ move(int)
comment10.text=\n\ Moves\ the\ scroll\ actor\ forward\ a\ specified\ amount.\n\ To\ go\ backwards,\ enter\ a\ negative\ number.<p>\n\ This\ will\ affect\ all\ the\ locations\ of\ the\n\ scroll\ actor.\n\ @param\ distance\ The\ number\ of\ cells\ the\ scroll\n\ actor\ will\ move\ forward.\n
comment11.params=x\ y
comment11.target=void\ turnTowardsGlobalLocation(int,\ int)
comment11.text=\n\ Turns\ towards\ a\ location\ in\ the\ big\ space.\n\ @param\ x\ The\ x\ co\u00F6rdinate\ of\ the\ location.\n\ @param\ y\ The\ y\ co\u00F6rdinate\ of\ the\ location.\n
comment12.params=x\ y
comment12.target=void\ turnTowardsCameraLocation(int,\ int)
comment12.text=\n\ Turns\ towards\ a\ location\ seen\ from\ the\ camera.\n\ @param\ x\ The\ x\ co\u00F6rdinate\ of\ the\ location.\n\ @param\ y\ The\ y\ co\u00F6rdinate\ of\ the\ location.\n
comment13.params=
comment13.target=boolean\ isCameraFollower()
comment13.text=\n\ Returns\ you're\ a\ camera\ follower\ or\ not.\n\ If\ you're\ not\ in\ a\ world,\ this\ will\ throw\ an\n\ exception.\n
comment14.params=value
comment14.target=void\ setIsCameraFollower(boolean)
comment14.text=\n\ Used\ by\ the\ system\:\ don't\ touch\!\n
comment2.params=
comment2.target=int\ getGlobalX()
comment2.text=\n\ Returns\ the\ x\ coordinate\ where\ you're\ really\n\ standing.\n
comment3.params=
comment3.target=int\ getGlobalY()
comment3.text=\n\ Returns\ the\ y\ coordinate\ where\ you're\ really\n\ standing.\n
comment4.params=
comment4.target=int\ getXFromCamera()
comment4.text=\n\ Returns\ your\ x\ co\u00F6rdinate\ seen\ from\ the\ camera.\n
comment5.params=
comment5.target=int\ getYFromCamera()
comment5.text=\n\ Returns\ your\ y\ co\u00F6rdinate\ seen\ from\ the\ camera.\n
comment6.params=x\ y
comment6.target=void\ setLocation(int,\ int)
comment6.text=\n\ Sets\ your\ location\ seen\ from\ the\ world\n\ (regular\ location).\n\ That\ means\ that\ a\ negative\ location\ is\ off\n\ screen,\ and\ bigger\ than\ the\ world's\ size\ is\n\ also\ off\ screen.\n
comment7.params=x\ y
comment7.target=void\ setLocationFromCamera(int,\ int)
comment7.text=\n\ Sets\ your\ location\ seen\ from\ the\ camera.\n
comment8.params=x\ y
comment8.target=void\ setGlobalLocation(int,\ int)
comment8.text=\n\ Sets\ your\ location\ in\ the\ big\ space\ (the\n\ space\ where\ the\ camera\ is\ moving\ over).\n
comment9.params=
comment9.target=ScrollWorld\ getWorld()
comment9.text=\n\ Returns\ the\ ScrollWorld\ you're\ in.\n\ If\ you're\ not\ in\ a\ world,\ this\ will\ return\ null.\n
numComments=15
